openapi: 3.0.0
info:
  title: Unified Customer Profile API
  version: 1.0.0
  description: API for managing customer profiles

paths:
  /profiles:
    post:
      summary: Create a new profile
      operationId: createProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
            examples:
              example-1:
                value:
                  name: "John Doe"
                  gender: "Male"
                  birthday: "1990-06-15T00:00:00Z"
                  location: "123 Fake Street, City, Country"
                  contact:
                    email: "john.doe@email.com"
                    phone: "+1234567890"
                  loyalty:
                    level: "Gold"
                    enrolledAt: "2021-01-01T00:00:00Z"
                    lastActivityAt: "2023-03-15T14:00:00Z"
      responses:
        '201':
          description: Profile created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
    get:
      summary: Get a list of profiles
      operationId: getAllProfiles
      parameters:
        - name: page
          in: query
          description: Page number of the profiles list
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Number of profiles per page
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: A paginated list of profiles
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    example: 50
                  totalPages:
                    type: integer
                    example: 5
                  page:
                    type: integer
                    example: 1
                  limit:
                    type: integer
                    example: 10
                  profiles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Profile'
              examples:
                example-1:
                  value:
                    total: 50
                    totalPages: 5
                    page: 1
                    limit: 10
                    profiles:
                      - profileId: "212312we3e31"
                        name: "John Doe"
                        gender: "Male"
                        birthday: "1990-06-15T00:00:00Z"
                        location: "123 Fake Street, City, Country"
                        contact:
                          email: "john.doe@email.com"
                          phone: "+1234567890"
                        loyalty:
                          level: "Gold"
                          enrolledAt: "2021-01-01T00:00:00Z"
                          lastActivityAt: "2023-03-15T14:00:00Z"
                        createdAt: "2021-01-01T00:00:00Z"
                        updatedAt: "2021-01-05T00:00:00Z"

  /profiles/{profileId}:
    get:
      summary: Get a profile by ID
      operationId: getProfileById
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Profile data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
              examples:
                example-1:
                  value:
                    profileId: "212312we3e31"
                    name: "John Doe"
                    gender: "Male"
                    birthday: "1990-06-15T00:00:00Z"
                    location: "123 Fake Street, City, Country"
                    contact:
                      email: "john.doe@email.com"
                      phone: "+1234567890"
                    loyalty:
                      level: "Gold"
                      enrolledAt: "2021-01-01T00:00:00Z"
                      lastActivityAt: "2023-03-15T14:00:00Z"
                    createdAt: "2021-01-01T00:00:00Z"
                    updatedAt: "2021-01-05T00:00:00Z"

    put:
      summary: Update a profile
      operationId: updateProfile
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
            examples:
              example-1:
                value:
                  name: "John Doe Updated"
                  gender: "Male"
                  birthday: "1990-06-15T00:00:00Z"
                  location: "321 Real Street, City, Country"
                  contact:
                    email: "john.updated@email.com"
                    phone: "+1234567899"
                  loyalty:
                    level: "Platinum"
                    enrolledAt: "2021-01-01T00:00:00Z"
                    lastActivityAt: "2023-04-10T10:00:00Z"
      responses:
        '200':
          description: Profile updated successfully

    delete:
      summary: Delete a profile
      operationId: deleteProfile
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Profile deleted successfully

components:
  schemas:
    Profile:
      type: object
      required:
        - name
        - gender
        - birthday
        - location
        - contact
        - loyalty
      properties:
        profileId:
          type: string
        name:
          type: string
        gender:
          type: string
        birthday:
          type: string
          format: date-time
        location:
          type: string
        contact:
          $ref: '#/components/schemas/Contact'
        loyalty:
          $ref: '#/components/schemas/Loyalty'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
          nullable: true

    Contact:
      type: object
      properties:
        email:
          type: string
          format: email
        phone:
          type: string

    Loyalty:
      type: object
      properties:
        level:
          type: string
        enrolledAt:
          type: string
          format: date-time
        lastActivityAt:
          type: string
          format: date-time
